// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(HelpDuxDbContext))]
    [Migration("20230511213658_SeedersAdd")]
    partial class SeedersAdd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLayer.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReviewId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedAt");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("Rating");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<int>("WebsiteId")
                        .HasColumnType("int")
                        .HasColumnName("WebsiteId");

                    b.HasKey("ReviewId");

                    b.HasIndex("UserId");

                    b.HasIndex("WebsiteId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Comment = "Great search engine!",
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 57, 948, DateTimeKind.Utc).AddTicks(7267),
                            Rating = 5,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2,
                            WebsiteId = 1
                        },
                        new
                        {
                            ReviewId = 2,
                            Comment = "Love using Twitter!",
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 57, 948, DateTimeKind.Utc).AddTicks(7272),
                            Rating = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3,
                            WebsiteId = 2
                        },
                        new
                        {
                            ReviewId = 3,
                            Comment = "GitHub is amazing for open-source projects!",
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 57, 948, DateTimeKind.Utc).AddTicks(7274),
                            Rating = 5,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            WebsiteId = 3
                        },
                        new
                        {
                            ReviewId = 4,
                            Comment = "I find YouTube very entertaining!",
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 57, 948, DateTimeKind.Utc).AddTicks(7276),
                            Rating = 5,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4,
                            WebsiteId = 4
                        },
                        new
                        {
                            ReviewId = 5,
                            Comment = "Facebook helps me stay connected with friends and family!",
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 57, 948, DateTimeKind.Utc).AddTicks(7278),
                            Rating = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2,
                            WebsiteId = 5
                        },
                        new
                        {
                            ReviewId = 6,
                            Comment = "Netflix has the best shows and movies!",
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 57, 948, DateTimeKind.Utc).AddTicks(7279),
                            Rating = 5,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            WebsiteId = 6
                        },
                        new
                        {
                            ReviewId = 7,
                            Comment = "I love listening to music on Spotify!",
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 57, 948, DateTimeKind.Utc).AddTicks(7281),
                            Rating = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3,
                            WebsiteId = 7
                        },
                        new
                        {
                            ReviewId = 8,
                            Comment = "Instagram is my favorite social media app!",
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 57, 948, DateTimeKind.Utc).AddTicks(7283),
                            Rating = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4,
                            WebsiteId = 8
                        });
                });

            modelBuilder.Entity("DataLayer.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Password");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PictureUrl");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Roles");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Username");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "pavelvitov02@gmail.com",
                            Password = "$2a$11$lfdaa3MQFsVgziZV984tWOUTUqPwyeXoz3hPnhBk/uD6g1xllPBRS",
                            PictureUrl = "https://example.com/johndoe.jpg",
                            Roles = "Admin",
                            Username = "Lucifer23"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "janedoe@example.com",
                            Password = "$2a$11$l8fXvrISj6Z5sBgj6lJwFuIiAxKefX0tNFTYPSAu1oVGdo0MK1fki",
                            PictureUrl = "https://example.com/janedoe.jpg",
                            Roles = "User",
                            Username = "JaneDoe"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "bobsmith@example.com",
                            Password = "$2a$11$P.nr7V6pBB2HNMB8mrjceOAUJnrHESHohNXEVTmLsdD3r9wfcAHrq",
                            PictureUrl = "https://example.com/bobsmith.jpg",
                            Roles = "User",
                            Username = "BobSmith"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "alicejohnson@example.com",
                            Password = "$2a$11$S3JpLyvHTot2wRhPeNUiQ.el7QA4QrEgjBwjpaxbV1.iCYB8366B2",
                            PictureUrl = "https://example.com/alicejohnson.jpg",
                            Roles = "User",
                            Username = "AliceJohnson"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "davidlee@example.com",
                            Password = "$2a$11$YtIyTuOPbBY9.CQRS.AYeOu5GkOUtR8Deazc8yHPuxrUTEoDeRAc6",
                            PictureUrl = "https://example.com/davidlee.jpg",
                            Roles = "User",
                            Username = "DavidLee"
                        },
                        new
                        {
                            UserId = 6,
                            Email = "lisawang@example.com",
                            Password = "$2a$11$DBLcNc9eR9jz5rzWodca9.1RKesCnPAqR0RJfN2Nc8.lsyYEuZo5m",
                            PictureUrl = "https://example.com/lisawang.jpg",
                            Roles = "User",
                            Username = "LisaWang"
                        },
                        new
                        {
                            UserId = 7,
                            Email = "mikewilliams@example.com",
                            Password = "$2a$11$4vydcI3xWT00niFfK.1SyOo6kqhIgFBBivXMggxKbBdj/XUQA3At.",
                            PictureUrl = "https://example.com/mikewilliams.jpg",
                            Roles = "User",
                            Username = "MikeWilliams"
                        },
                        new
                        {
                            UserId = 8,
                            Email = "samanthabrown@example.com",
                            Password = "$2a$11$93dNS56UDYkeQdJNRYu/gO5UDJiZ5D3ip06DmJ8Ut1ujEYvVPoHlK",
                            PictureUrl = "https://example.com/samanthabrown.jpg",
                            Roles = "User",
                            Username = "SamanthaBrown"
                        },
                        new
                        {
                            UserId = 9,
                            Email = "adamsmith@example.com",
                            Password = "$2a$11$kkOzkcPmSDcj.Hhv/qQWY.Rkr2wDjx8i2R4UIsiWYYQWSQlloP/vS",
                            PictureUrl = "https://example.com/adamsmith.jpg",
                            Roles = "User",
                            Username = "AdamSmith"
                        },
                        new
                        {
                            UserId = 10,
                            Email = "oliviajones@example.com",
                            Password = "$2a$11$8zmr5ZfjzL15F1BnhSjyT.u1PF/jOC3vSwM5F/8d7GodObU6Qzqka",
                            PictureUrl = "https://example.com/oliviajones.jpg",
                            Roles = "User",
                            Username = "OliviaJones"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Website", b =>
                {
                    b.Property<int>("WebsiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(700)
                        .HasColumnType("nvarchar(700)")
                        .HasAnnotation("RegularExpression", "^(https?://)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w.-]*)*/?$");

                    b.HasKey("WebsiteId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Url")
                        .IsUnique();

                    b.ToTable("Websites");

                    b.HasData(
                        new
                        {
                            WebsiteId = 1,
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(5859),
                            Description = "Search engine",
                            ImageUrl = "https://example.com/google.jpg",
                            IsActive = true,
                            Name = "Google",
                            Tag = "Search_Engine",
                            UpdatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(5861),
                            Url = "https://www.google.com"
                        },
                        new
                        {
                            WebsiteId = 2,
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6346),
                            Description = "Social media platform",
                            ImageUrl = "https://example.com/twitter.jpg",
                            IsActive = true,
                            Name = "Twitter",
                            Tag = "Social_Media",
                            UpdatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6347),
                            Url = "https://www.twitter.com"
                        },
                        new
                        {
                            WebsiteId = 3,
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6350),
                            Description = "Code hosting platform",
                            ImageUrl = "https://example.com/github.jpg",
                            IsActive = true,
                            Name = "GitHub",
                            Tag = "Code_Hosting",
                            UpdatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6351),
                            Url = "https://www.github.com"
                        },
                        new
                        {
                            WebsiteId = 4,
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6353),
                            Description = "Video sharing platform",
                            ImageUrl = "https://example.com/youtube.jpg",
                            IsActive = true,
                            Name = "YouTube",
                            Tag = "Entertainment",
                            UpdatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6354),
                            Url = "https://www.youtube.com"
                        },
                        new
                        {
                            WebsiteId = 5,
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6356),
                            Description = "Social media platform",
                            ImageUrl = "https://example.com/facebook.jpg",
                            IsActive = true,
                            Name = "Facebook",
                            Tag = "Social_Media",
                            UpdatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6356),
                            Url = "https://www.facebook.com"
                        },
                        new
                        {
                            WebsiteId = 6,
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6358),
                            Description = "Streaming platform",
                            ImageUrl = "https://example.com/netflix.jpg",
                            IsActive = true,
                            Name = "Netflix",
                            Tag = "Entertainment",
                            UpdatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6359),
                            Url = "https://www.netflix.com"
                        },
                        new
                        {
                            WebsiteId = 7,
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6361),
                            Description = "Music streaming platform",
                            ImageUrl = "https://example.com/spotify.jpg",
                            IsActive = true,
                            Name = "Spotify",
                            Tag = "Music",
                            UpdatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6361),
                            Url = "https://www.spotify.com"
                        },
                        new
                        {
                            WebsiteId = 8,
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6363),
                            Description = "Social media platform",
                            ImageUrl = "https://example.com/instagram.jpg",
                            IsActive = true,
                            Name = "Instagram",
                            Tag = "Social_Media",
                            UpdatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6364),
                            Url = "https://www.instagram.com"
                        },
                        new
                        {
                            WebsiteId = 9,
                            CreatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6366),
                            Description = "Social media platform",
                            ImageUrl = "https://example.com/tiktok.jpg",
                            IsActive = true,
                            Name = "TikTok",
                            Tag = "Social_Media",
                            UpdatedAt = new DateTime(2023, 5, 11, 21, 36, 56, 742, DateTimeKind.Utc).AddTicks(6366),
                            Url = "https://www.tiktok.com"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Review", b =>
                {
                    b.HasOne("DataLayer.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.Website", "Website")
                        .WithMany("Reviews")
                        .HasForeignKey("WebsiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Website");
                });

            modelBuilder.Entity("DataLayer.Models.User", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("DataLayer.Models.Website", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
